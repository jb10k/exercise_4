import org.apache.kafka.clients.admin.AdminClient;
import org.apache.kafka.clients.admin.AlterConfigOp;
import org.apache.kafka.clients.admin.Config;
import org.apache.kafka.clients.admin.ConfigEntry;
import org.apache.kafka.clients.admin.AlterConfigsOptions;
import org.apache.kafka.common.config.ConfigResource;
import org.apache.kafka.common.config.ConfigResource.Type;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

public class UpdateKafkaTopicConfig {
    public static void main(String[] args) {
        Properties props = new Properties();
        props.put("bootstrap.servers", "localhost:9092");

        try (AdminClient adminClient = AdminClient.create(props)) {
            ConfigResource resource = new ConfigResource(Type.TOPIC, "Test");
            
            Map<ConfigResource, Config> configs = new HashMap<>();
            ConfigEntry retentionEntry = new ConfigEntry("retention.ms", "604800000"); // 7 дней
            ConfigEntry retentionBytesEntry = new ConfigEntry("retention.bytes", "-1"); // Без ограничения
            
            AlterConfigOp retentionOp = new AlterConfigOp(retentionEntry, AlterConfigOp.OpType.SET);
            AlterConfigOp retentionBytesOp = new AlterConfigOp(retentionBytesEntry, AlterConfigOp.OpType.SET);
            
            configs.put(resource, new Config(Arrays.asList(retentionOp, retentionBytesOp)));
            
            adminClient.incrementalAlterConfigs(configs).all().get();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
